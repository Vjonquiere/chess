name: Chess CI/CD

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  lint:
    name: Lint Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: chess

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Check code style
        run: mvn spotless:check

  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: chess

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: chess/target/
          retention-days: 1

  test:
    name: Unit Tests
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: chess

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run tests with coverage
        run: mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent test jacoco:report -Dtestfx.headless=true -Dprism.order=sw -Dglass.platform=Monocle -Dmonocle.platform=headless

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            chess/target/surefire-reports/*.xml
            chess/target/site/jacoco/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: chess/target/site/jacoco/jacoco.xml
          fail_ci_if_error: false

  multi-os:
    name: Multi-OS Tests
    needs: [build, test]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    strategy:
      matrix:
        os: [ubuntu-24.04, alpine:3.21.2]
        include:
          - os: ubuntu-24.04
            container: ubuntu:24.04
            setup: |
              apt update && apt install -y openjdk-17-jdk maven
              export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
          - os: alpine:3.21.2
            container: alpine:3.21.2
            setup: |
              apk add --no-cache openjdk17 maven
              export JAVA_HOME=/usr/lib/jvm/java-17-openjdk

    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    defaults:
      run:
        working-directory: chess

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        run: ${{ matrix.setup }}

      - name: Build and test
        run: |
          mvn clean package -DskipTests
          mvn clean test -DexcludedGroups=gui

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: multi-os-artifacts-${{ matrix.os }}
          path: chess/target/
          retention-days: 1

  cleanup:
    name: Cleanup
    needs: [lint, build, test, multi-os]
    runs-on: ubuntu-latest
    if: always()
    defaults:
      run:
        working-directory: chess

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Clean
        run: mvn clean