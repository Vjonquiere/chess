before_script:
  - cd chess

stages:
  - lint
  - build
  - test
  - gui-test
  - multi-os
  - .post

lint-test-job:   # Test stage: Runs lint checks
  stage: lint
  script:
    - echo "Checking code style..."
    - mvn spotless:check
  tags:
      - shell
      - Debian

build-job:       # Build stage: Compiles the code and packages it into a JAR
  stage: build
  script:
    - echo "Starting Maven build..."
    - mvn -v
    - mvn clean package -DskipTests
  artifacts:
    paths:
      - chess/target/  # Save build artifacts (e.g., JAR files) for use in later stages
    expire_in: 1 day
  tags:
      - shell
      - Debian

unit-test-job:   # Test stage: Runs unit tests
  stage: test
  needs:
    - build-job
  coverage: '/Total.*?([0-9]{1,3}) ?%/'
  script:
    - echo "Running unit tests..."
    - mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent test jacoco:report -DexcludedGroups=gui
    - cat target/site/jacoco/index.html
  artifacts:
    reports:
      junit: chess/target/surefire-reports/*.xml  # Ensure JUnit test results are visible in GitLab
      coverage_report:
        coverage_format: jacoco
        path: chess/target/site/jacoco/jacoco.xml
  tags:
      - shell
      - Debian

cleanup:
  stage: .post
  script:
    - mvn clean
  tags:
      - shell
      - Debian

gui-test-job: 
  stage: gui-test
  image: eclipse-temurin:17
  before_script:
    - apt-get update && apt-get install -y xvfb libxkbcommon-x11-0 libxi6 libxtst6 libglib2.0-0 maven
    - Xvfb :99 -screen 0 1920x1080x24 &
    - export DISPLAY=:99
    - cd chess
  script:
    - echo "Running GUI tests in Docker..."
    - mvn test -Dtestfx.headless=true -Dgroups=gui
  tags:
    - Docker

#====================
#     MultiOS
#====================

ubuntu:
  stage: multi-os
  image: ubuntu:24.04
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "main"'
      when: always
    - when: never
  before_script:
    - apt update && apt install -y openjdk-17-jdk maven
    - export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
    - export PATH=$JAVA_HOME/bin:$PATH
    - java -version
    - mvn -version
    - cd chess
  script:
    - echo "Building and testing on Ubuntu with JDK 17..."
    - mvn clean package -DskipTests
    - mvn clean test -DexcludedGroups=gui
  artifacts:
    paths:
      - chess/target/
    expire_in: 1h
  tags:
    - Docker

alpine:
  stage: multi-os
  image: alpine:3.21.2
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "main"'
      when: always
    - when: never
  before_script:
    - apk add --no-cache openjdk17 maven
    - export JAVA_HOME=/usr/lib/jvm/java-17-openjdk
    - export PATH=$JAVA_HOME/bin:$PATH
    - java -version
    - mvn -version
    - cd chess
  script:
    - echo "Building and testing on Alpine with JDK 17..."
    - mvn clean package -DskipTests
    - mvn clean test -DexcludedGroups=gui
  artifacts:
    paths:
      - chess/target/
    expire_in: 1h
  tags:
    - Docker
