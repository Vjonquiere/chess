@startuml

top to bottom direction
skinparam linetype ortho

class AboutPopUp {
  + AboutPopUp(): 
   label: Label
}
class Board {
  + Board(Game, Stage): 
  - checkSquare: Position
  - stage: Stage
  - switchSelectedSquare(int, int): void
  + processPawnPromoting(int, int): boolean
  + setHintSquares(Position, Position): void
  - clearCheckSquare(): void
  + setReachableSquares(int, int): void
  + clearReachableSquares(): void
  - cleanHintSquares(): void
  - updateAfterAnimation(): void
  + buildBoard(): void
  - movePiece(HistoryNode): void
  + setLastMoveSquares(Position, Position): void
  + updateBoard(): void
  - clearLastMoveSquares(): void
   stage: Stage
   checkSquare: Position
}
class ButtonsPanel {
  + ButtonsPanel(): 
  - initRestartButton(): void
  - initUndoButton(): void
  - initResignButton(): void
  - initDrawButton(): void
  - initUndrawButton(): void
  - initRedoButton(): void
}
class ChessMenu {
  + ChessMenu(): 
  + displayMessage(String, boolean, boolean): void
  - fileChooser(): File
  - createOptionsMenu(): Menu
  - createAboutMenu(): Menu
  - openNewGamePopup(): void
  - openThemePopup(): void
  - fileSaver(): String
  - createLangMenu(): Menu
  - createFileMenu(): Menu
  - createGameMenu(): Menu
  - createThemeMenuItem(): Menu
}
class CliView {
  + CliView(): 
  - undoCommand(String): void
  - quitCommand(String): void
  - restartCommand(String): void
  - redoCommand(String): void
  - startUserInputListener(): Thread
  + onGameEvent(EventType): void
  - surrenderCommand(String): void
  - saveCommand(String): void
  - drawCommand(String): void
  - helpCommand(String): void
  - handleUserInput(String): void
  - historyCommand(String): void
  - timeCommand(String): void
  + start(): Thread
  - undrawCommand(String): void
  - displayBoardCommand(String): void
  - moveCommand(String): void
  + onErrorEvent(Exception): void
}
enum ColorTheme << enumeration >> {
  - ColorTheme(String, String, String, String, String, String, String, String): 
  - primary: String
  - text: String
  - tertiary: String
  - textInverted: String
  - accent: String
  - secondary: String
  - background2: String
  - background: String
  + valueOf(String): ColorTheme
  + setCustom(String, String, String, String, String, String, String, String): void
  + values(): ColorTheme[]
   primary: String
   text: String
   secondary: String
   textInverted: String
   tertiary: String
   accent: String
   background: String
   background2: String
}
entity CommandEntry << record >> {
  - CommandEntry(Consumer<String>, String): 
  + action(): Consumer<String>
  + description(): String
}
entity CommandEntry << record >> {
  - CommandEntry(Consumer<String>, String): 
  + description(): String
  + action(): Consumer<String>
}
class ControlPanel {
  + ControlPanel(BorderPane): 
  - historyPanel: HistoryPanel
  + update(EventType): void
  - initPlayerPanel(): void
  - initButtonsPanel(): void
  - initHistoryPanel(): void
   historyPanel: HistoryPanel
}
class EndGamePopUp {
  + EndGamePopUp(): 
  + show(EventType): void
}
class GuiLauncher {
  + GuiLauncher(): 
  + launchGui(GuiView): void
  + start(Stage): void
}
class GuiView {
  + GuiView(): 
  - theme: ColorTheme
  - init: boolean
  + init(Stage): void
  + start(): Thread
  + onErrorEvent(Exception): void
  + updateLanguage(): void
  + show(): void
  + updateTheme(): void
  + applyCss(Scene): void
  + onGameEvent(EventType): void
   init: boolean
   theme: ColorTheme
}
class HelpPopup {
  + HelpPopup(): 
   label: Label
}
class HistoryPanel {
  + HistoryPanel(): 
  + updateHistoryPanel(): void
}
class InfoPopUp {
  + InfoPopUp(): 
  + show(String): void
}
class MessageDisplay {
  + MessageDisplay(): 
  + loadIcon(String): ImageView
  + displayInfo(String, boolean): void
  - autoClearMessage(): void
  + clearPreviousMessage(): void
  + displayError(String, boolean): void
}
class NewGamePopup {
  + NewGamePopup(): 
  - makeAiTimeBox(HashMap<OptionType, String>): VBox
  + show(HashMap<OptionType, String>): void
  - makeAiBox(boolean, HashMap<OptionType, String>): VBox
}
class PieceImage {
  + PieceImage(ColoredPiece): 
}
class PlayerInfos {
  + PlayerInfos(String, boolean, boolean): 
  - currentPlayer: Canvas
  + getPlayerIcon(boolean): ImageView
  + updateTimer(boolean): void
   currentPlayer: boolean
}
class PlayerPanel {
  + PlayerPanel(): 
  + switchCurrentPlayer(): void
}
class PromotionPieceSelectionPopUp {
  + PromotionPieceSelectionPopUp(Stage, Position, Position): 
  - pieceImage(ColoredPiece, String): VBox
}
class SettingsEditorPopup {
  + SettingsEditorPopup(): 
}
class Square {
  + Square(ColoredPiece, boolean): 
  + updatePiece(ColoredPiece): void
  + setReachable(boolean, boolean): void
   check: boolean
   lastMove: boolean
   selected: boolean
   hint: boolean
}
class ThemePopUp {
  + ThemePopUp(): 
  + show(): void
  + toHexString(Color): String
}
class UciView {
  + UciView(): 
  + onErrorEvent(Exception): void
  - startUserInputListener(): Thread
  + onGameEvent(EventType): void
  - positionCommand(String): void
  - handleUserInput(String): void
  - quitCommand(String): void
  - goCommand(String): void
  - uciNewGameCommand(String): void
  - isReadyCommand(String): void
  + start(): Thread
  - uciCommand(String): void
}
interface View << interface >> {
  + start(): Thread
}
class YesNoPopUp {
  + YesNoPopUp(String, Command, Runnable): 
}

Board                         -[#595959,dashed]->  PieceImage                   : "«create»"
Board                         -[#595959,dashed]->  PromotionPieceSelectionPopUp : "«create»"
Board                         -[#595959,dashed]->  Square                       : "«create»"
Board                        "1" *-[#595959,plain]-> "pieces\n*" Square                       
ButtonsPanel                  -[#595959,dashed]->  YesNoPopUp                   : "«create»"
ChessMenu                     -[#595959,dashed]->  AboutPopUp                   : "«create»"
ChessMenu                     -[#595959,dashed]->  HelpPopup                    : "«create»"
ChessMenu                    "1" *-[#595959,plain]-> "messageDisplay\n1" MessageDisplay               
ChessMenu                     -[#595959,dashed]->  MessageDisplay               : "«create»"
ChessMenu                     -[#595959,dashed]->  SettingsEditorPopup          : "«create»"
ChessMenu                     -[#595959,dashed]->  YesNoPopUp                   : "«create»"
CliView                       -[#595959,dashed]->  CommandEntry                 : "«create»"
CliView                      "1" *-[#595959,plain]-> "commands\n*" CommandEntry                 
CliView                       -[#008200,dashed]-^  View                         
CommandEntry                  +-[#820000,plain]-  CliView                      
CommandEntry                  +-[#820000,plain]-  UciView                      
ControlPanel                 "1" *-[#595959,plain]-> "buttonsPanel\n1" ButtonsPanel                 
ControlPanel                  -[#595959,dashed]->  ButtonsPanel                 : "«create»"
ControlPanel                  -[#595959,dashed]->  HistoryPanel                 : "«create»"
ControlPanel                 "1" *-[#595959,plain]-> "historyPanel\n1" HistoryPanel                 
ControlPanel                 "1" *-[#595959,plain]-> "playerPanel\n1" PlayerPanel                  
ControlPanel                  -[#595959,dashed]->  PlayerPanel                  : "«create»"
GuiLauncher                  "1" *-[#595959,plain]-> "guiView\n1" GuiView                      
GuiView                       -[#595959,dashed]->  Board                        : "«create»"
GuiView                      "1" *-[#595959,plain]-> "board\n1" Board                        
GuiView                       -[#595959,dashed]->  ChessMenu                    : "«create»"
GuiView                      "1" *-[#595959,plain]-> "menu\n1" ChessMenu                    
GuiView                      "1" *-[#595959,plain]-> "theme\n1" ColorTheme                   
GuiView                       -[#595959,dashed]->  ControlPanel                 : "«create»"
GuiView                      "1" *-[#595959,plain]-> "controlPanel\n1" ControlPanel                 
GuiView                       -[#008200,dashed]-^  View                         
PlayerPanel                  "1" *-[#595959,plain]-> "whitePlayer\n1" PlayerInfos                  
PlayerPanel                   -[#595959,dashed]->  PlayerInfos                  : "«create»"
PromotionPieceSelectionPopUp  -[#595959,dashed]->  PieceImage                   : "«create»"
Square                        -[#595959,dashed]->  PieceImage                   : "«create»"
UciView                       -[#595959,dashed]->  CommandEntry                 : "«create»"
UciView                      "1" *-[#595959,plain]-> "commands\n*" CommandEntry                 
UciView                       -[#008200,dashed]-^  View                         
@enduml
